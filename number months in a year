#include <stdio.h>

int main() {
    int month, year, days;

    // Get user input
    printf("Enter month (1-12): ");
    scanf("%d", &month);
    printf("Enter year: ");
    scanf("%d", &year);

    // Determine number of days in the month
    if (month < 1 || month > 12) {
        printf("Invalid month. Please enter a value between 1 and 12.\n");
        return 1;
    }

    switch (month) {
        case 1: // January
        case 3: // March
        case 5: // May
        case 7: // July
        case 8: // August
        case 10: // October
        case 12: // December
            days = 31;
            break;
        case 4: // April
        case 6: // June
        case 9: // September
        case 11: // November
            days = 30;
            break;
        case 2: // February
            // Check for leap year
            if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
                days = 29; // Leap year
            } else {
                days = 28; // Not a leap year
            }
            break;
        default:
            days = 0; // This should never happen due to earlier check
    }

    printf("Number of days in month %d of year %d: %d\n", month, year, days);
    return 0;
}
#include <stdio.h>
#include <stdlib.h>

// Function to compare for ascending order
int compareAsc(const void *a, const void *b) {
    return ((int)a - (int)b);
}

// Function to compare for descending order
int compareDesc(const void *a, const void *b) {
    return ((int)b - (int)a);
}

void sortArray(int arr[], int n) {
    int mid = n / 2;

    // Sort the first half in ascending order
    qsort(arr, mid, sizeof(int), compareAsc);

    // Sort the second half in descending order
    qsort(arr + mid, n - mid, sizeof(int), compareDesc);
}

int main() {
    int arr[] = {12, 7, 14, 9, 5, 3, 11, 6};
    int n = sizeof(arr) / sizeof(arr[0]);

    sortArray(arr, n);

    // Print the sorted array
    printf("Sorted array:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
